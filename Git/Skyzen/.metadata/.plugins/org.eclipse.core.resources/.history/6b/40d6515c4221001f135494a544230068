package skyzen;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.ScrollPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class AfricanCountries {
    private static final Random RANDOM = new Random();

    public void start(Stage primaryStage, LocalDate entry, LocalDate departure) {
        Font customFont = Font.loadFont(getClass().getResourceAsStream("/soulwayfont-demo.otf"), 36);
        Font customFont2 = Font.loadFont(getClass().getResourceAsStream("/futura light bt.ttf"), 20);

        Image image = new Image("/AfricanImages/Cover.jpg");
        ImageView imageView = new ImageView(image);
        imageView.setFitWidth(900);
        imageView.setFitHeight(400);
        imageView.setTranslateY(30);
        imageView.setPreserveRatio(true);

        Text text = new Text("Explora los rincones ocultos \ndel continente africano");
        text.setFill(Color.WHITE);
        text.setFont(customFont);
        text.setTranslateX(-75);
        text.setTranslateY(-100);

        Text subText = new Text("África penetra bajo la piel, tanto si se visita por primera vez como si se viaja \nhasta allá con frecuencia. El lienzo sobre el cual \nse escribe la épica historia de este territorio es extraordinario, \ny razón suficiente para visitarlo");
        subText.setFill(Color.WHITE);
        subText.setFont(customFont2);
        subText.setTranslateX(-20);
        subText.setTranslateY(-5);

        StackPane imageStack = new StackPane(imageView, text, subText);
        imageStack.setAlignment(Pos.CENTER);
        
        Text itinerario = new Text("Itinerario");
        itinerario.setFont(customFont2);
        itinerario.setTranslateX(-325);
        itinerario.setTranslateY(30);

        VBox content = new VBox(40, imageStack, itinerario, createActivitiesGrid(entry, departure));
        content.setAlignment(Pos.CENTER);

        ScrollPane scrollPane = new ScrollPane(content);
        scrollPane.setFitToWidth(true);
        scrollPane.setFitToHeight(true);
        scrollPane.setStyle("-fx-background: transparent; -fx-background-color: transparent;");
        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);
        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);

        StackPane root = new StackPane(scrollPane);
        root.setStyle("-fx-background-color: #F5EFED; -fx-padding: 10px; -fx-border-color: white; -fx-border-width: 10px; -fx-border-radius: 10px;");
        
        Scene scene = new Scene(root, 900, 600);

        primaryStage.setScene(scene);
        primaryStage.setTitle("África");
        primaryStage.show();
    }

    private VBox createActivitiesGrid(LocalDate entry, LocalDate departure) {
        VBox vBox = new VBox(10);
        vBox.setAlignment(Pos.CENTER);

        LocalDate currentDate = entry;
        int day = 1;
        while (!currentDate.isAfter(departure)) {
            VBox dayActivities = new VBox(5);
            dayActivities.getChildren().add(new Text("Día " + day++));

            // Generar actividades aleatorias para este día
            for (int i = 0; i < 3; i++) {
                AfricanCountriesActivities activity = getRandomActivity();
                Image image = new Image(activity.getImagenes());
                ImageView imageView = new ImageView(image);
                imageView.setFitWidth(100);
                imageView.setFitHeight(100);
                Text description = new Text(activity.getLugar());
                description.setFont(Font.font(14));
                dayActivities.getChildren().addAll(imageView, description);
            }

            vBox.getChildren().add(dayActivities);
            currentDate = currentDate.plusDays(1);
        }

        return vBox;
    }

    private AfricanCountriesActivities getRandomActivity() {
        AfricanCountriesActivities[] activities = AfricanCountriesActivities.values();
        return activities[RANDOM.nextInt(activities.length)];
    }

    public int calculateVisitDuration(LocalDate inDate, LocalDate outDate) {
        return (int) ChronoUnit.DAYS.between(inDate, outDate.plusDays(1));
    }
}





