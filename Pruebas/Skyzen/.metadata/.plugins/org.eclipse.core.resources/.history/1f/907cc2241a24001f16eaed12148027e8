package skyzen;

import java.util.HashMap;
import java.util.Map;
import javafx.application.Application;
import javafx.geometry.Orientation;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.image.Image;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.Hyperlink;
import javafx.scene.control.PasswordField;
import javafx.scene.control.Separator;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class Skyzen extends Application {

    private Map<String, String> usuarios = new HashMap<>();
    private boolean passwordVisible = false;
    private TextField userField;
    private TextField passwordTextField;
    private PasswordField passwordField;
    private ImageView passwordIcon;

    public void start(Stage primaryStage) {
        inicializarUsuarios();
        
        Font customFont = Font.loadFont(getClass().getResourceAsStream("/soulwayfont-demo.otf"), 14);
        Font customFont2 = Font.loadFont(getClass().getResourceAsStream("/futura light bt.ttf"), 14);
        Text introductoryText = new Text("Bienvenido a Skyzen");
        introductoryText.setFont(customFont);
        introductoryText.setStyle("-fx-font-size: 24px;");
        introductoryText.setTranslateX(-235);
        introductoryText.setTranslateY(15);
        
        Text userIn = new Text("Nombre de usuario");
        userIn.setFont(customFont2);
        userIn.setTranslateX(-300);
        userIn.setTranslateY(-65);
        
        userField = new TextField();
        userField.setPromptText("Su usuario");
        userField.setMaxWidth(220);
        userField.setTranslateX(-250);
        userField.setTranslateY(-75);
        userField.setStyle("-fx-padding: 10px");

        Text passwordIn = new Text("Contraseña");
        passwordIn.setFont(customFont2);
        passwordIn.setTranslateX(-322);
        passwordIn.setTranslateY(-58);

        passwordField = new PasswordField();
        passwordField.setPromptText("Su contraseña");
        passwordField.setMaxWidth(220);
        passwordField.setTranslateX(-250);
        passwordField.setTranslateY(-70);
        passwordField.setStyle("-fx-padding: 10px;");

        passwordTextField = new TextField();
        passwordTextField.setPromptText("Su contraseña");
        passwordTextField.setMaxWidth(220);
        passwordTextField.setTranslateX(-250);
        passwordTextField.setTranslateY(-70);
        passwordTextField.setStyle("-fx-padding: 10px;");
        passwordTextField.setVisible(false);

        StackPane passwordPane = new StackPane();
        passwordPane.getChildren().addAll(passwordField, passwordTextField);

        passwordIcon = new ImageView(new Image(getClass().getResourceAsStream("/ojo.png")));
        passwordIcon.setFitWidth(15);
        passwordIcon.setFitHeight(15);

        Button showPasswordButton = new Button("", passwordIcon);
        showPasswordButton.setStyle("-fx-background-color: transparent;");
        showPasswordButton.setTranslateX(-160);
        showPasswordButton.setTranslateY(-116);

        showPasswordButton.setOnAction(e -> togglePasswordVisibility());

        Button btnIn = new Button("Iniciar sesión");
        btnIn.setFont(customFont2);
        btnIn.setTranslateX(72);
        btnIn.setTranslateY(393);
        btnIn.setStyle("-fx-background-color: white; -fx-padding: 12px");
        
        btnIn.setOnAction(e -> {
            String username = userField.getText();
            String password = passwordVisible ? passwordTextField.getText() : passwordField.getText();

            if (username.isEmpty() && password.isEmpty()) {
                mostrarAlerta("Debe introducir los datos");
            } else if (username.isEmpty()) {
                mostrarAlerta("Debe introducir el nombre de usuario");
            } else if (password.isEmpty()) {
                mostrarAlerta("Debe introducir la contraseña");
            } else {
                if (autenticarUsuario(username, password)) {
                    LoggedSession sesionIniciada = new LoggedSession();
                    sesionIniciada.mostrarSesionIniciada(primaryStage, username);
                } else {
                    mostrarAlerta("Nombre de usuario o contraseña incorrectos");
                }
            }
        });
        
        btnIn.setOnMouseEntered(e -> btnIn.setStyle("-fx-background-color: #9bc1bc; -fx-padding: 12px; -fx-text-fill: white;"));
        btnIn.setOnMouseExited(e -> btnIn.setStyle("-fx-background-color: white; -fx-padding: 12px;"));
        
        Text registerText = new Text("Registrarse");
        registerText.setFont(customFont);
        registerText.setStyle("-fx-font-size: 24px;");
        registerText.setTranslateX(90);
        registerText.setTranslateY(-25);
        
        Text userRegister = new Text("Nombre de usuario");
        userRegister.setFont(customFont2);
        userRegister.setTranslateX(74);
        userRegister.setTranslateY(19);
        
        TextField userRegisterField = new TextField();
        userRegisterField.setPromptText("Su usuario");
        userRegisterField.setMaxWidth(170);
        userRegisterField.setTranslateX(100);
        userRegisterField.setTranslateY(5);
        userRegisterField.setStyle("-fx-padding: 10px");
        
        Text passwordRegisterIn = new Text("Contraseña");
        passwordRegisterIn.setFont(customFont2);
        passwordRegisterIn.setTranslateX(262);
        passwordRegisterIn.setTranslateY(-280);

        PasswordField passwordRegisterField = new PasswordField();
        passwordRegisterField.setPromptText("Su contraseña");
        passwordRegisterField.setMaxWidth(170);
        passwordRegisterField.setTranslateX(310);
        passwordRegisterField.setTranslateY(-287);
        passwordRegisterField.setStyle("-fx-padding: 10px;");
        
        Text emailIn = new Text("Email");
        emailIn.setFont(customFont2);
        emailIn.setTranslateX(35);
        emailIn.setTranslateY(-320);
        
        TextField email = new TextField();
        email.setPromptText("Su email");
        email.setMaxWidth(170);
        email.setTranslateX(100);
        email.setTranslateY(-247);
        email.setStyle("-fx-padding: 10px;");
        
        Button registerIn = new Button("Registrarse");
        registerIn.setFont(customFont2);
        registerIn.setTranslateX(62);
        registerIn.setTranslateY(-240);
        registerIn.setStyle("-fx-background-color: white; -fx-padding: 12px;");
        
        registerIn.setOnAction(e -> {
            String newUsername = userRegisterField.getText();
            String newPassword = passwordRegisterField.getText();
            String newEmail = email.getText();

            if (newUsername.isEmpty() || newPassword.isEmpty() || newEmail.isEmpty()) {
                mostrarAlerta("Todos los campos de registro deben ser completados");
            } else if (usuarios.containsKey(newUsername)) {
                mostrarAlerta("El nombre de usuario ya existe. Elija otro nombre de usuario.");
            } else {
                registrarUsuario(newUsername, newPassword, newEmail);
                mostrarAlerta("Usuario registrado exitosamente");
                userRegisterField.clear();
                passwordRegisterField.clear();
                email.clear();
            }
        });
        
        registerIn.setOnMouseEntered(e -> registerIn.setStyle("-fx-background-color: #9bc1bc; -fx-padding: 12px; -fx-text-fill: white;"));
        registerIn.setOnMouseExited(e -> registerIn.setStyle("-fx-background-color: white; -fx-padding: 12px;"));
        
        Hyperlink modoInvitado = new Hyperlink("Entrar como invitado");
        modoInvitado.setTranslateX(360);
        modoInvitado.setTranslateY(-155);
        modoInvitado.setOnAction(event -> {
        	try {
                LoggedSession sesionIniciada = new LoggedSession();
                sesionIniciada.mostrarSesionIniciada(primaryStage, userField.getText());
        	} catch (Exception e) {
        		e.printStackTrace();
        	}
        });
        
        Separator separator = new Separator();
        separator.setStyle("-fx-max-height: 450px;");
        separator.setTranslateX(-450);
        separator.setTranslateY(30);
        separator.setOrientation(Orientation.VERTICAL);

        VBox vbox = new VBox(15);
        vbox.getChildren().addAll(introductoryText, registerText, userRegister, userRegisterField, userIn, userField, passwordIn, passwordPane, showPasswordButton, btnIn, passwordRegisterIn, passwordRegisterField, email, emailIn, registerIn, separator, modoInvitado);
        vbox.setAlignment(Pos.CENTER);
        vbox.setTranslateY(40);
        
        BorderPane root = new BorderPane();
        root.setCenter(vbox);
        BorderPane.setAlignment(introductoryText, Pos.TOP_CENTER);
        root.setTop(btnIn);
        root.setRight(separator);
        root.setStyle("-fx-background-color: #F5EFED; -fx-padding: 5px; -fx-border-color: white; -fx-border-width: 10px; -fx-border-radius: 10px;");

        Scene scene = new Scene(root, 900, 600);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Skyzen");
        primaryStage.show();

        scene.setOnMouseClicked(event -> {
            if (!userField.isFocused() || !passwordField.isFocused()) {
                userField.setFocusTraversable(false);
                root.requestFocus();
            }
        });
    }

    private void togglePasswordVisibility() {
        passwordVisible = !passwordVisible;
        if (passwordVisible) {
            passwordTextField.setText(passwordField.getText());
            passwordField.setVisible(false);
            passwordTextField.setVisible(true);
            passwordIcon.setImage(new Image(getClass().getResourceAsStream("/invisible.png")));
        } else {
            passwordField.setText(passwordTextField.getText());
            passwordField.setVisible(true);
            passwordTextField.setVisible(false);
            passwordIcon.setImage(new Image(getClass().getResourceAsStream("/ojo.png")));
        }
    }

    private void mostrarAlerta(String mensaje) {
        Alert alerta = new Alert(AlertType.WARNING);
        alerta.setTitle("Advertencia");
        alerta.setHeaderText(null);
        alerta.setContentText(mensaje);
        alerta.showAndWait();
    }

    private void inicializarUsuarios() {
        usuarios.put("lauren", "1234");
        usuarios.put("Mike", "1234");
        usuarios.put("core", "cangetin");
    }

    private boolean autenticarUsuario(String username, String password) {
        return usuarios.containsKey(username) && usuarios.get(username).equals(password);
    }
    
    private void registrarUsuario(String username, String password, String email) {
        usuarios.put(username, password);
    }

    public static void main(String[] args) {
        launch(args);
    }

}

